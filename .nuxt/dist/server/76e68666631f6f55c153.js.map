{"version":3,"file":"76e68666631f6f55c153.js","sources":["webpack:///../../src/mixins/measurable.ts","webpack:///./pages/index.vue"],"sourcesContent":["// Helpers\nimport { convertToUnit } from '../util/helpers'\n\n// Types\nimport Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type NumberOrNumberString = PropValidator<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    }\n  }\n})\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Strapi from 'strapi-sdk-javascript/build/main'\nconst apiUrl = process.env.API_URL || 'http://sesbackend.thenameisvery.com'\nconst strapi = new Strapi(apiUrl)\nimport axios from 'axios'\n\nimport Particles from '~/components/Particles.vue'\nimport Splash from '~/components/Splash.vue'\nimport About from '~/components/About.vue'\nimport OurServices from '~/components/OurServices.vue'\nimport Resource from '~/components/Resource.vue'\nimport CaseStudy from '~/components/CaseStudy.vue'\nimport Faq from '~/components/Faq.vue'\nimport Footer from '~/components/Footer.vue'\n\nimport gql from 'graphql-tag';\n\nconst servicesQuery = gql `\n  query allServices {\n    services {\n      id\n      title\n      subtitle\n      content\n      icon {\n        url\n      }\n    }\n  }\n`;\nconst portfoliosQuery = gql `\n  query allPortfolios {\n    portfolios {\n      id\n      title\n      subtitle\n      content\n      feature\n      thumbnail {\n        url\n      }\n    }\n  }\n`;\nconst blogsQuery = gql `\n  query allBlogs {\n    blogs {\n      id\n      title\n      content\n      image { url }\n    }\n  }\n`;\nconst careersQuery = gql `\n  query allCareers {\n    careers {\n      id\n      title\n      content\n    }\n  }\n`;\nexport default {\n  data() {\n    return {\n      options: {\n        normalScrollElements: '.containersc'\n      },\n      dialog: false,\n      dialogP: false,\n      dialogB: false\n    }\n  },\n  apollo: {\n    services: {\n      query: servicesQuery\n    },\n    portfolios: {\n      query: portfoliosQuery\n    },\n    blogs: {\n      query: blogsQuery\n    },\n    careers: {\n      query: careersQuery\n    },\n  },\n  async asyncData({\n    params\n  }) {\n    let {\n      data\n    } = await axios.get(`http://sesbackend.thenameisvery.com/pages/1`)\n    return {\n      abouttitle: data.title,\n      aboutcontent: data.content,\n      aboutthumbnail: data.thumbnail.url\n    }\n  },\n  layout: 'front',\n  components: {\n    Particles,\n    Splash,\n    About,\n    OurServices,\n    Resource,\n    CaseStudy,\n    Faq,\n    Footer\n  },\n  methods: {\n    build() {\n      var slideSelector = this.options.slideSelector || '.slide';\n      var sectionSelector = this.options.sectionSelector || '.section';\n      let activeSectionIndex = fp_utils.index(document.querySelector(sectionSelector + '.active'));\n      let activeSlide = document.querySelector(sectionSelector + '.active ' + slideSelector + '.active');\n      let activeSlideIndex = activeSlide ? fp_utils.index(activeSlide) : -1;\n      this.destroy();\n      if (activeSectionIndex > -1) {\n        fp_utils.addClass(document.querySelectorAll(sectionSelector)[activeSectionIndex], 'active');\n      }\n      if (activeSlideIndex > -1) {\n        fp_utils.addClass(activeSlide, 'active');\n      }\n      this.init();\n    },\n    destroy() {\n      if (typeof fullpage_api !== 'undefined' && typeof fullpage_api.destroy !== 'undefined') {\n        fullpage_api.destroy('all');\n      }\n    },\n    emitEvent(name, args) {\n      // Emit event on Vue way\n      this.$emit.apply(this, [camelToKebab(name), ...args]);\n      // Run event's handler with non Vue way\n      if (this.options.hasOwnProperty(name)) {\n        this.options[name].apply(this, args);\n      }\n    },\n    init() {\n      this.api = new fullpage(this.$refs.fullpage, this.options);\n    },\n  },\n  mounted() {\n    this.init();\n  },\n  beforeDestroy() {\n    if (typeof this.api !== 'undefined') {\n      this.destroy();\n    }\n  }\n}\n"],"mappings":"AASA;;;;;;;;;;;;ACgTA;;;;;;;;;;;;;AAGA;;;;;;;;;AAGA;;;;;;;;AAIA","sourceRoot":""}